spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
spring.datasource.url=jdbc:mysql://localhost:3306/TripleBE?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul

spring.jpa.show-sql=true
spring.jpa.properties.hibernate.format_sql=true
spring.server.port = 8080
spring.server.servlet.context-path= /
spring.server.servlet.encoding.charset = UTF-8
spring.server.servlet.enabled=true
spring.server.servlet.force=true

spring.mvc.view.prefix=/WEB-INF/views/
spring.mvc.view.suffix=.jsp
spring.devtools.restart.enabled = true
spring.jpa.open-in-view=true
spring.jpa.hibernate.ddl-auto=create
spring.jpa.hibernate.naming.physical-strategy = org.hibernate.boot.model.naming.PhysicalNamingStrategyStandardImpl
spring.jpa.hibernate.naming.use-new-id-generator-mappings= false
spring.jackson.serialization.fail-on-empty-beans= false

spring.kafka.bootstrap-servers=kafka:9092
spring.kafka.consumer.group-id=point
spring.kafka.consumer.enable-auto-commit=true
spring.kafka.consumer.auto-offset-reset=latest
spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.producer.value-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.consumer.value-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.max-poll-records=1000



# ?? EC2? ??



